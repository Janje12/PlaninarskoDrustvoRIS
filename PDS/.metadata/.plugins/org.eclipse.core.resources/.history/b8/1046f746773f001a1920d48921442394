package com.pds.controllers;

import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.Authentication;
import org.springframework.security.core.context.SecurityContextHolder;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import com.pds.repositories.KorisnikRepository;
import com.pds.repositories.PlaninarskiDomRepository;
import com.pds.repositories.RezervacijaRepository;
import com.pds.repositories.ZnamenitostRepository;
import com.pds.security.UserDetailsImpl;

import models.Korisnik;
import models.PlaninarskiDom;
import models.Rezervacija;
import models.Znamenitost;


@Controller
@RequestMapping(value="Rezervacija")
public class RezervacijaController {

	@Autowired
	private RezervacijaRepository rr;
	@Autowired
	private PlaninarskiDomRepository pdr;
	@Autowired
	private ZnamenitostRepository zr;
	@Autowired
	private KorisnikRepository kr;

	@RequestMapping(value="dodaj", method=RequestMethod.POST)
	public void dodajRezervaciju(String datum, HttpServletRequest request, HttpServletResponse response) throws IOException, ParseException {
		Authentication auth = SecurityContextHolder.getContext().getAuthentication();
		String username = ((UserDetailsImpl) auth.getPrincipal()).getUsername();
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		Date datumDolaska = formatter.parse(datum);
		Date datumRezervacije = new Date();
		PlaninarskiDom pd;
		Znamenitost z;
		Rezervacija r;
		Korisnik k = kr.findByUsername(username);
		String vrsta = (String) request.getSession().getAttribute("vrsta");
		String id = (String) request.getSession().getAttribute("id");
		if(vrsta.equals("planinarskidom")) {
			pd = pdr.findById(Integer.parseInt(id)).get();
			r = rr.save(new Rezervacija(datumDolaska, datumRezervacije, vrsta, k, pd));
		}
		else {
			z = zr.findById(Integer.parseInt(id)).get();
			r = rr.save(new Rezervacija(datumDolaska, datumRezervacije, vrsta, k, z));
		}
		String poruka = "Neuspesno rezervisano za korisnika " + k.getUsername() + " za datum " + datumDolaska;
		if(r != null) {
			poruka = "Uspesno rezervisano za korisnika " + k.getUsername() + " za datum " + datumDolaska;
		}
		request.getSession().setAttribute("poruka", poruka);
		response.sendRedirect("/pdsWEB/rezervacija.jsp");
	}

	@RequestMapping(value="obrisi", method=RequestMethod.POST)
	public String obrisiRezervaciju(String idRezervacija, HttpServletRequest request) {
		String poruka = "Neuspesno obrisana rezervacija sa ID-om " + idRezervacija + " iz baze.";
		if(idRezervacija != null) {
			rr.deleteById(Integer.parseInt(idRezervacija));
			poruka = "Uspesno obrisana rezervacija sa ID-om " + idRezervacija + " iz baze";
		}
		request.setAttribute("poruka", poruka);
		return "/admin/rezervacija.jsp";
	}

	@RequestMapping(value="lista", method=RequestMethod.POST) 
	public String listaRezervacija(String vrstaRezervacije, HttpServletRequest request) {
		List<Rezervacija> lr = rr.findAllByVrstaRezervacije(vrstaRezervacije);
		String poruka = "Neuspesno dobavljena lista rezervacija za " + vrstaRezervacije + ".";
		if(lr != null) {
			poruka = "Uspesno dobavljena lista rezervacija za " + vrstaRezervacije + ".";
			request.setAttribute("rezervacije", lr);
		}
		request.setAttribute("poruka", poruka);
		return "/admin/rezervacija.jsp";
	}

	@RequestMapping(value="stranica", method=RequestMethod.GET) 
	public void stranicaRezervacije(String idPlaninarskiDom, String vrsta, HttpServletRequest request, HttpServletResponse response) throws IOException {
		PlaninarskiDom pd = pdr.findById(Integer.parseInt(idPlaninarskiDom)).get();
		request.getSession().setAttribute("vrsta", vrsta);
		request.getSession().setAttribute("pd", pd);
		request.getSession().setAttribute("id", pd.getIdPlaninarskiDom());
		Date d = new Date();
		SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
		String ds = formatter.format(d);
		request.getSession().setAttribute("date", ds);
		response.sendRedirect("/pdsWEB/rezervacija.jsp");
	}
}
